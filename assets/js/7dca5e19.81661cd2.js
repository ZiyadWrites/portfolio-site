"use strict";(self.webpackChunkportfolio_site=self.webpackChunkportfolio_site||[]).push([[2994],{2721:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"technical-writing-portfolio/api-documentation/pet-store-api","title":"Pet Store API reference documentation","description":"The Pet Store API simulates the operations of a pet store and the management of pet-related data. In this reference documentation, I adhere to OpenAPI Standards to detail the CRUD operations associated with this API, providing clear and concise guidelines for each endpoint.","source":"@site/docs/technical-writing-portfolio/api-documentation/pet-store-api.md","sourceDirName":"technical-writing-portfolio/api-documentation","slug":"/technical-writing-portfolio/api-documentation/pet-store-api","permalink":"/portfolio-site/docs/technical-writing-portfolio/api-documentation/pet-store-api","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/technical-writing-portfolio/api-documentation/pet-store-api.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"technicalWritingPortfolioSidebar","previous":{"title":"Connect API","permalink":"/portfolio-site/docs/technical-writing-portfolio/api-documentation/connect-api"}}');var s=n(4848),i=n(8453);const a={sidebar_position:6},o="Pet Store API reference documentation",d={},c=[{value:"Pets",id:"pets",level:2},{value:"Endpoint and methods",id:"endpoint-and-methods",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Request example",id:"request-example",level:2},{value:"Response example and schema",id:"response-example-and-schema",level:2}];function l(e){const t={br:"br",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"pet-store-api-reference-documentation",children:"Pet Store API reference documentation"})}),"\n",(0,s.jsx)(t.p,{children:"The Pet Store API simulates the operations of a pet store and the management of pet-related data. In this reference documentation, I adhere to OpenAPI Standards to detail the CRUD operations associated with this API, providing clear and concise guidelines for each endpoint."}),"\n",(0,s.jsx)(t.h2,{id:"pets",children:"Pets"}),"\n",(0,s.jsx)(t.p,{children:"The Pet object represents a pet in the store.The object includes details such as the pet's unique ID, name, category, associated tags, status, and photo. This resource facilitates the management of pet-related data within the pet store system."}),"\n",(0,s.jsx)(t.h2,{id:"endpoint-and-methods",children:"Endpoint and methods"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"POST"}),"/pet",(0,s.jsx)(t.br,{}),"\n","Adds a new pet to the pet store, including details such as petId, category, name, photoUrls, tags, and status."]}),"\n",(0,s.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Required"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"id"})}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Unique identifier for the pet."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"category.id"})}),(0,s.jsx)(t.td,{children:"Integer"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{children:"Identifier for the pet's category."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"category.name"})}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"Yes"}),(0,s.jsx)(t.td,{children:"Name of the pet's category."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"name"})}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Name of the pet."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"photoUrls"})}),(0,s.jsx)(t.td,{children:"Array"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"List of URLs pointing to images of the pet."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"tags"})}),(0,s.jsx)(t.td,{children:"Array"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsxs)(t.td,{children:["List of tags associated with the pet. Each tag includes an ",(0,s.jsx)(t.code,{children:"id"})," and ",(0,s.jsx)(t.code,{children:"name"}),"."]})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.code,{children:"status"})}),(0,s.jsx)(t.td,{children:"String"}),(0,s.jsx)(t.td,{children:"No"}),(0,s.jsx)(t.td,{children:"Availability status of the pet (e.g., 'available', 'pending', 'sold')."})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"request-example",children:"Request example"}),"\n",(0,s.jsx)(t.p,{children:"The following example illustrates a request formatted in JSON:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-{",children:'  "id": 10,\r\n  "category": {\r\n    "id": 0,\r\n    "name": "Cats"\r\n  },\r\n  "name": "Melody",\r\n  "photoUrls": [\r\n    "https://cats/melody.jpg"\r\n  ],\r\n  "tags": [\r\n    {\r\n      "id": 10,\r\n      "name": "Siamese cat"\r\n    }\r\n  ],\r\n  "status": "available"\r\n}\n'})}),"\n",(0,s.jsx)(t.h2,{id:"response-example-and-schema",children:"Response example and schema"}),"\n",(0,s.jsx)(t.p,{children:"The reponse is reurned in Curl format:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-curl",metastring:"-X 'POST' \\",children:'  \'https://petstore.swagger.io/v2/pet\' \\\r\n  -H \'accept: application/json\' \\\r\n  -H \'Content-Type: application/json\' \\\r\n  -d \'{\r\n  "id": 10,\r\n  "category": {\r\n    "id": 0,\r\n    "name": "Cats"\r\n  },\r\n  "name": "Melody",\r\n  "photoUrls": [\r\n    "string"\r\n  ],\r\n  "tags": [\r\n    {\r\n      "id": 10,\r\n      "name": "Siamese cat"\r\n    }\r\n  ],\r\n  "status": "available"\r\n}\'\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(6540);const s={},i=r.createContext(s);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);